package dumb

import (
	"path"
	"fmt"
)

templ BackOfCardDisplay(data CardBack) {
	<section id="card-content" class="flex flex-col justify-content align-center">
		<section class="previous-card">
			if data.PreviousCardID != "" {
				<button class="button button-color" hx-get={ fmt.Sprintf("%s/%s/%s", "/page/front-of-card", data.DeckID, data.PreviousCardID) } hx-target="#card-content">Previous Card</button>
			}
		</section>
		<section id="card-back" class="card">
			<p>
				{ data.BackContent }
			</p>
		</section>
		<section class="card-footer">
			<form>
				<section class="left-side-footer-back">
					<button class="button button-color" hx-get={ string(templ.SafeURL(path.Join("/page/front-of-card/", data.DeckID, data.CardID))) } hx-target="#card-content">Front</button>
					<button class="button button-color" hx-post={ string(templ.SafeURL(path.Join("/page/answered-correct/", data.SessionID))) } hx-target="#card-content">Answered Correct</button>
					<button class="button button-color" hx-post={ string(templ.SafeURL(path.Join("/page/answered-incorrect/", data.SessionID))) } hx-target="#card-content">Answered Incorrect</button>
					@VoteButtons(data.VoteButtonData)
					<input type="hidden" name="current-card-id" value={ data.CardID }/>
					<input type="hidden" name="next-card-id" value={ data.NextCardID }/>
					<input type="hidden" name="deck-id" value={ data.DeckID }/>
				</section>
			</form>
		</section>
	</section>
}
