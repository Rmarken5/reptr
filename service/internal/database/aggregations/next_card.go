// Code generated by 'mjson2go -fix -out=next_card.go next_card.json' DO NOT EDIT.
package aggregations

import (
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

func GetNext_card(deckID string, cardID string, username string) mongo.Pipeline {
	return mongo.Pipeline{
		bson.D{
			{Key: "$match", Value: bson.D{
				{Key: "deck_id", Value: deckID},
			}},
		},
		bson.D{
			{Key: "$setWindowFields", Value: bson.D{
				{Key: "sortBy", Value: bson.D{
					{Key: "created_at", Value: 1},
				}},
				{Key: "output", Value: bson.D{
					{Key: "nextCard", Value: bson.D{
						{Key: "$push", Value: "$$ROOT"},
						{Key: "window", Value: bson.D{
							{Key: "documents", Value: bson.A{
								1,
								1,
							}},
						}},
					}},
				}},
			}},
		},
		bson.D{
			{Key: "$match", Value: bson.D{
				{Key: "_id", Value: cardID},
			}},
		},
		bson.D{
			{Key: "$project", Value: bson.D{
				{Key: "_id", Value: 0},
				{Key: "nextCard", Value: bson.D{
					{Key: "$arrayElemAt", Value: bson.A{
						"$nextCard",
						0,
					}},
				}},
			}},
		},
		bson.D{
			{Key: "$replaceRoot", Value: bson.D{
				{Key: "newRoot", Value: "$nextCard"},
			}},
		},
		bson.D{
			{Key: "$set", Value: bson.D{
				{Key: "user_upvotes", Value: bson.D{
					{Key: "$ifNull", Value: bson.A{
						"$user_upvotes",
						bson.A{},
					}},
				}},
				{Key: "user_downvotes", Value: bson.D{
					{Key: "$ifNull", Value: bson.A{
						"$user_downvotes",
						bson.A{},
					}},
				}},
			}},
		},
		bson.D{
			{Key: "$addFields", Value: bson.D{
				{Key: "is_upvoted_by_user", Value: bson.D{
					{Key: "$cond", Value: bson.D{
						{Key: "if", Value: bson.D{
							{Key: "$in", Value: bson.A{
								username,
								"$user_upvotes",
							}},
						}},
						{Key: "then", Value: true},
						{Key: "else", Value: false},
					}},
				}},
				{Key: "is_downvoted_by_user", Value: bson.D{
					{Key: "$cond", Value: bson.D{
						{Key: "if", Value: bson.D{
							{Key: "$in", Value: bson.A{
								username,
								"$user_downvotes",
							}},
						}},
						{Key: "then", Value: true},
						{Key: "else", Value: false},
					}},
				}},
			}},
		},
		bson.D{
			{Key: "$project", Value: bson.D{
				{Key: "card_id", Value: "$_id"},
				{Key: "content", Value: "$front"},
				{Key: "deck_id", Value: "$deck_id"},
				{Key: "upvotes", Value: bson.D{
					{Key: "$size", Value: "$user_upvotes"},
				}},
				{Key: "downvotes", Value: bson.D{
					{Key: "$size", Value: "$user_downvotes"},
				}},
			}},
		},
	}
}
